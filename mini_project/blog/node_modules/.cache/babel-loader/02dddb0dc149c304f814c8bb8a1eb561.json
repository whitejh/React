{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\kei02\\\\Desktop\\\\React\\\\blog\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let posts = '강남 고기 맛집';\n  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동 맛집', '파이썬독학']);\n  let [글제목2, 글제목변경2] = useState(['글제목2', '8월 24일']);\n  let [글제목3, 글제목변경3] = useState(['글제목3', '8월 25일']);\n  let [따봉, 따봉변경] = useState(0);\n  let [modal, modal변경] = useState(false); // ui가 보임/안보임 정보를 state로 저장해 둠\n\n  function 반복된UI() {\n    let arr = [];\n\n    for (let i = 0; i < 3; i++) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uBC18\\uBCF5\\uB41CUI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this));\n    }\n\n    return arr;\n  }\n\n  function 제목바꾸기() {\n    // let newArray = [...글제목].sort(); \n    // deep copy (값공유 x, 서로 독립적인 값을 가지는 복사)\n    let newArray = [...글제목].sort();\n    newArray[0] = '여자 코트 추천';\n    글제목변경(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC1C\\uBC1C Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: 제목바꾸기,\n      children: \"\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), 반복된UI(), 글제목.map(글 => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [글, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              따봉변경(따봉 + 1);\n            },\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 23\n          }, this), 따봉, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"8\\uC6D4 30\\uC77C \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        modal변경(!modal);\n      },\n      children: \"\\uC5F4\\uACE0 \\uB2EB\\uB294 \\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \", modal === true ? /*#__PURE__*/_jsxDEV(Modal, {\n      글제목: 글제목\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} /////////////////////////////////////////////////////////\n// Component 만드는 법\n// 1. 함수 만들고 이름 짓고\n// 2. 축약을 원하는 HTML 넣고\n// 3. 원하는 곳에서 <함수명 />\n// 이름은 대문자로 시작\n// return() 안에 있는 건 태그 하나로 묶어야 함\n// 상위 component에서 만든 state 쓰려면 props 문법 사용해야됨\n\n\n_s(App, \"1YcX5W/p3XCzJWxe7PtPZ/LQoPQ=\");\n\n_c = App;\n\nfunction Modal(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.글제목[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Modal;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["D:/Users/kei02/Desktop/React/blog/src/App.js"],"names":["React","useState","App","posts","글제목","글제목변경","글제목2","글제목변경2","글제목3","글제목변경3","따봉","따봉변경","modal","modal변경","반복된UI","arr","i","push","제목바꾸기","newArray","sort","map","글","Modal","props"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let posts = '강남 고기 맛집';\n  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동 맛집', '파이썬독학']);\n  let [글제목2, 글제목변경2] = useState(['글제목2', '8월 24일']);\n  let [글제목3, 글제목변경3] = useState(['글제목3', '8월 25일']);\n\n  let [따봉, 따봉변경] = useState(0);\n  let [modal, modal변경] = useState(false);\n  // ui가 보임/안보임 정보를 state로 저장해 둠\n\n  function 반복된UI() {\n    let arr = [];\n    for (let i = 0; i < 3; i++) {\n      arr.push(<div>반복된UI</div>);\n    }\n    return arr;\n  }\n\n  function 제목바꾸기() {\n    // let newArray = [...글제목].sort(); \n    // deep copy (값공유 x, 서로 독립적인 값을 가지는 복사)\n    let newArray = [...글제목].sort();\n    newArray[0] = '여자 코트 추천';\n    글제목변경(newArray);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 Blog</div>\n      </div>\n      <button onClick={제목바꾸기}>버튼</button>\n\n      { 반복된UI()}\n\n      {\n        글제목.map((글) => {\n          return (\n            <div className=\"list\">\n              <h3>{글} <span onClick={() => { 따봉변경(따봉 + 1) }}>👍</span>{따봉} </h3>\n              <p>8월 30일 발행</p>\n              <hr />\n            </div>\n          )\n        })\n      }\n\n      <button onClick={() => { modal변경(!modal) }}>열고 닫는 버튼</button> {\n        modal === true ? <Modal 글제목={글제목} /> : null\n      }\n      {/* if 문을 이용해 state가 true일 때 ui를 보여줌 */}\n\n      {/* <div className=\"list\">\n        <h3 onClick={() => { modal변경(true) }}>{글제목[2]}</h3>\n        <p>{글제목3[1]}</p>\n        <hr />\n      </div> */}\n\n\n    </div>\n  );\n}\n/////////////////////////////////////////////////////////\n// Component 만드는 법\n// 1. 함수 만들고 이름 짓고\n// 2. 축약을 원하는 HTML 넣고\n// 3. 원하는 곳에서 <함수명 />\n// 이름은 대문자로 시작\n// return() 안에 있는 건 태그 하나로 묶어야 함\n// 상위 component에서 만든 state 쓰려면 props 문법 사용해야됨\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h2>{props.글제목[0]}</h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}