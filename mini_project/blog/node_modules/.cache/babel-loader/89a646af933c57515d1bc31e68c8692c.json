{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\kei02\\\\Desktop\\\\React\\\\mini_project\\\\blog\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [title, setTitle] = useState(['파이썬 독학', '타입스크립트 독학', '리액트 독학']);\n  let [thumb, setThumb] = useState([0, 0, 0, 0, 0]);\n  let [modal, setModal] = useState(false); // ui가 보임/안보임 정보를 state로 저장해 둠\n\n  let [text, setText] = useState(0); // 누른제목, 누른제목 변경\n\n  let [input, setInput] = useState(''); // 입력값\n\n  function 제목바꾸기() {\n    // shallow copy, deep copy (값공유 x, 서로 독립적인 값을 가지는 복사)\n    let newArray = [...title].sort(); // title 가나다순 정렬 기능\n    // newArray[0] = '여자 코트 추천';\n\n    setTitle(newArray);\n  } /////////////////////////////\n  // return 부분\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uAC1C\\uBC1C Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: 제목바꾸기,\n        children: \"\\uC81C\\uBAA9\\uBC14\\uAFB8\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), title.map((title, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            onClick: () => {\n              setModal(true);\n              setText(i);\n            },\n            children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => {\n                e.stopPropagation(); // 이벤트 버블링 막기\n\n                let copy = [...thumb];\n                copy[i] = copy[i] + 1;\n                setThumb(copy);\n              },\n              children: \" \\uD83D\\uDC4D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), \" \", thumb[i]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8\\uC6D4 30\\uC77C \\uBC1C\\uD589\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"publish\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setvalue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onclick: () => {\n            let copy = [...title];\n            copy.unshift(value);\n            setTitle(copy);\n          },\n          children: \"\\uAE00 \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModal(!modal);\n        },\n        children: \"\\uC5F4\\uACE0 \\uB2EB\\uB294 \\uBC84\\uD2BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), modal === true ? /*#__PURE__*/_jsxDEV(Modal, {\n        title: title,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"MJFP/nvKQb6K/BcD+/t1mtVQP2g=\");\n\n_c = App;\n\nfunction Modal(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [props.title[props.text], \" \\uD83D\\uDC4D  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} /////////////////////////////////////////////////////////\n// TODO: Component 만드는 법\n// 1. function 만들고\n// 2. return() 안에 html 담기\n// 3. 원하는 곳에서 <함수명 /> 쓰기 (or <함수명></함수명> 쓰기)\n// 이름은 대문자로 시작\n// return() 안에 있는 건 태그 하나로 묶어야 함\n// 상위 component에서 만든 state 쓰려면 props 문법 사용해야됨\n\n\n_c2 = Modal;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["D:/Users/kei02/Desktop/React/mini_project/blog/src/App.js"],"names":["React","useState","App","title","setTitle","thumb","setThumb","modal","setModal","text","setText","input","setInput","제목바꾸기","newArray","sort","map","i","e","stopPropagation","copy","setvalue","target","value","unshift","Modal","props"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,QAAD,EAAW,WAAX,EAAwB,QAAxB,CAAD,CAAhC;AACA,MAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAhC;AACA,MAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAhC,CAHa,CAG6B;;AAC1C,MAAI,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAA9B,CAJa,CAIsB;;AACnC,MAAI,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAhC,CALa,CAKyB;;AAEtC,WAASY,KAAT,GAAiB;AACf;AACA,QAAIC,QAAQ,GAAG,CAAC,GAAGX,KAAJ,EAAWY,IAAX,EAAf,CAFe,CAEmB;AAClC;;AACAX,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACD,GAZY,CAcb;AACA;;;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EASIV,KAAK,CAACa,GAAN,CAAU,CAACb,KAAD,EAAQc,CAAR,KAAc;AACtB,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAI,YAAA,OAAO,EAAE,MAAM;AAAET,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAAgBE,cAAAA,OAAO,CAACO,CAAD,CAAP;AAAa,aAAlD;AAAA,uBACGd,KADH,eAEE;AAAM,cAAA,OAAO,EAAGe,CAAD,IAAO;AACpBA,gBAAAA,CAAC,CAACC,eAAF,GADoB,CACC;;AACrB,oBAAIC,IAAI,GAAG,CAAC,GAAGf,KAAJ,CAAX;AACAe,gBAAAA,IAAI,CAACH,CAAD,CAAJ,GAAUG,IAAI,CAACH,CAAD,CAAJ,GAAU,CAApB;AACAX,gBAAAA,QAAQ,CAACc,IAAD,CAAR;AACD,eALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,OAOiBf,KAAK,CAACY,CAAD,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA,WAA2BA,CAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OAjBD,CATJ,eAkCE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACtBG,YAAAA,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAM;AACrB,gBAAIH,IAAI,GAAG,CAAC,GAAGjB,KAAJ,CAAX;AACAiB,YAAAA,IAAI,CAACI,OAAL,CAAaD,KAAb;AACAnB,YAAAA,QAAQ,CAACgB,IAAD,CAAR;AACD,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,eA6CE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEZ,UAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAAmB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,EA8CGA,KAAK,KAAK,IAAV,gBAAiB,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,KAAd;AAAqB,QAAA,IAAI,EAAEM;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAjB,GAAuD,IA9C1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsDD;;GAtEQP,G;;KAAAA,G;;AAwET,SAASuB,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,iBAAKA,KAAK,CAACvB,KAAN,CAAYuB,KAAK,CAACjB,IAAlB,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAjBSgB,K;AAmBT,eAAevB,GAAf","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  let [title, setTitle] = useState(['파이썬 독학', '타입스크립트 독학', '리액트 독학']);\n  let [thumb, setThumb] = useState([0, 0, 0, 0, 0]);\n  let [modal, setModal] = useState(false);  // ui가 보임/안보임 정보를 state로 저장해 둠\n  let [text, setText] = useState(0); // 누른제목, 누른제목 변경\n  let [input, setInput] = useState(''); // 입력값\n\n  function 제목바꾸기() {\n    // shallow copy, deep copy (값공유 x, 서로 독립적인 값을 가지는 복사)\n    let newArray = [...title].sort(); // title 가나다순 정렬 기능\n    // newArray[0] = '여자 코트 추천';\n    setTitle(newArray);\n  }\n\n  /////////////////////////////\n  // return 부분\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"black-nav\">\n          <div>개발 Blog</div>\n        </div>\n        <button onClick={제목바꾸기}>제목바꾸기</button>\n\n        {/*title은 배열 안에 있는 데이터\n         i는 반복문 돌 때마다 0부터 1씩 증가하는 정수 */}\n        {\n          title.map((title, i) => {\n            return (\n              <div className=\"list\" key={i}>\n                <h4 onClick={() => { setModal(true); setText(i); }}>\n                  {title}\n                  <span onClick={(e) => {\n                    e.stopPropagation(); // 이벤트 버블링 막기\n                    let copy = [...thumb];\n                    copy[i] = copy[i] + 1;\n                    setThumb(copy);\n                  }}> 👍</span> {thumb[i]}\n                  {/* state가 배열일 경우, 복사부터 하고 수정 */}\n                </h4>\n                <p>8월 30일 발행</p>\n                <hr />\n              </div>\n            );\n          })\n        }\n\n        {/* <input onChange={(e) => {\n          setInput(e.target.value);\n          console.log(input);\n        }} /> */}\n\n        <div className=\"publish\">\n          <input onChange={(e) => {\n            setvalue(e.target.value);\n          }} />\n          <button onclick={() => {\n            let copy = [...title];\n            copy.unshift(value);\n            setTitle(copy);\n          }}>글 발행</button>\n        </div>\n\n        <button onClick={() => { setModal(!modal); }}>열고 닫는 버튼</button>\n        {modal === true ? <Modal title={title} text={text} /> : null}\n        {/* if 문을 이용해 state가 true일 때 ui를 보여줌 */}\n\n      </div>\n    </>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h2>{props.title[props.text]} 👍  </h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  );\n}\n\n/////////////////////////////////////////////////////////\n// TODO: Component 만드는 법\n// 1. function 만들고\n// 2. return() 안에 html 담기\n// 3. 원하는 곳에서 <함수명 /> 쓰기 (or <함수명></함수명> 쓰기)\n// 이름은 대문자로 시작\n// return() 안에 있는 건 태그 하나로 묶어야 함\n// 상위 component에서 만든 state 쓰려면 props 문법 사용해야됨\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}